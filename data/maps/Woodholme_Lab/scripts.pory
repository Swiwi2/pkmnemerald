mapscripts Woodholme_Lab_MapScripts{
    MAP_SCRIPT_ON_TRANSITION: Woodholme_Lab_OnTransition
}

script Woodholme_Lab_OnTransition{

}

const Red = 1
const PokeballLeft = 2
const PokeballCenter = 3
const PokeballRight = 4
const May = 5

//FYI: using FLAG_STARTER_SQUIRTLE, FLAG_STARTER_CHARMANDER and FLAG_STARTER_BULBASAUR even tho we have other gen starters.

script Woodholme_Lab_EventScript_Red{
    lock
    faceplayer
    // IF we HAVEN'T chosen a Pokémon already, this is what he says:
    if(!(flag(FLAG_STARTER_SQUIRTLE) || flag(FLAG_STARTER_CHARMANDER) || flag(FLAG_STARTER_BULBASAUR))){
        msgbox(Woodholme_Lab_Text_Red1)
    }
    // If we HAVE chosen a Pokémon AND progressed past the first Rival Battle, this is what he says:
    elif(!(var(VAR_WOODHOLME_STATE) == 0)){
        faceplayer
        msgbox(format("Remember, battle your Pokémon to make it stronger and take on the Gym Challenge!"))
    }
    // If we HAVE chosen a Pokémon already he says this:
    else{
        faceplayer
        msgbox(Woodholme_Lab_Text_Red2)                 
    }
    waitmessage
    release
    end
}

// If we interact with Red again before selecting a starter Pokémon:
text Woodholme_Lab_Text_Red1{
       format("Please choose a Pokémon to go with you on your adventure.")
}

// If we interact with Red again after selecting a starter Pokémon:
text Woodholme_Lab_Text_Red2{
    format("Ah, an excellent choice. That certainly was one of my favorites too!")
}

// Trigger to make RED talk to us after starter selection, to give Dex and Exp Share.
script Woodholme_Lab_Trigger_GetPokedexLeft{
    lock
    applymovement(1, RedMove1)
    waitmovement(0)
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerTurnAround)
    waitmovement(0)
    msgbox(Woodholme_Lab_Text_GivePokedex)
    setvar(VAR_WOODHOLME_LAB_STATE, 2)
    waitmessage
    msgbox(Woodholme_Lab_Text_SecondMon)
    call(Woodholme_Lab_EventScript_GiveSecondMon)
    call(Woodholme_Lab_EventScript_GivePokedex)
    msgbox(Woodholme_Lab_Text_GivePokedex2)
    call(Woodholme_Lab_EventScript_GiveExpShare)
    msgbox(Woodholme_Lab_Text_GiveExpShare)
    release
}

// Trigger to make RED talk to us after starter selection, to give Dex and Exp Share.
script Woodholme_Lab_Trigger_GetPokedexCenter{
    lock
    applymovement(1, RedMove2)
    waitmovement(0)
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerTurnAround)
    waitmovement(0)
    msgbox(Woodholme_Lab_Text_GivePokedex)
    setvar(VAR_WOODHOLME_LAB_STATE, 2)
    waitmessage
    msgbox(Woodholme_Lab_Text_SecondMon)
    call(Woodholme_Lab_EventScript_GiveSecondMon)
    call(Woodholme_Lab_EventScript_GivePokedex)
    msgbox(Woodholme_Lab_Text_GivePokedex2)
    call(Woodholme_Lab_EventScript_GiveExpShare)
    msgbox(Woodholme_Lab_Text_GiveExpShare)
    release
}

movement Woodholme_Lab_Movement_PlayerTurnAround{
    face_up
}

// Trigger to make RED talk to us after starter selection, to give Dex and Exp Share.
script Woodholme_Lab_Trigger_GetPokedexRight{
    lock
    applymovement(1, RedMove3)
    waitmovement(0)
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerTurnAround)
    waitmovement(0)
    msgbox(Woodholme_Lab_Text_GivePokedex)
    setvar(VAR_WOODHOLME_LAB_STATE, 2)
    setflag(FLAG_FORCE_DOUBLE_WILD)
    waitmessage
    msgbox(Woodholme_Lab_Text_SecondMon)
    call(Woodholme_Lab_EventScript_GiveSecondMon)
    call(Woodholme_Lab_EventScript_GivePokedex)
    msgbox(Woodholme_Lab_Text_GivePokedex2)
    call(Woodholme_Lab_EventScript_GiveExpShare)
    msgbox(Woodholme_Lab_Text_GiveExpShare)
    release
}

// Dialogue when Red comes down when we try to leave.
text Woodholme_Lab_Text_GivePokedex{
    format("Oh, {PLAYER}, hang on a second! I almost forgot.")
}

// Dialogue to give second Pokémon.
text Woodholme_Lab_Text_SecondMon{
    format("There are a few more things we need to cover before you head out. Firstly, most Pokémon battles today are two versus two. You can't realistically command more than two Pokémon at once, but two is very doable!")
}

// Dialogue after getting PokéDex:
text Woodholme_Lab_Text_GivePokedex2{
    format("That PokéDex is also useful to helping us understand how Pokémon TYPES work. There are several different types of Pokémon and in order to prove that you fully grasp how Pokémon types work, you can challenge Gyms. You should head up past Route 1 to Serenleaf City, where the first Gym Leader is waiting.")
}

// Dialogue after getting Exp. Share:
text Woodholme_Lab_Text_GiveExpShare{
    format("Finally, I don't expect you to complete the Gym Challenge all on your own. That girl you saw leaving before is May. She will be your RIVAL! She also received her first Pokémon just now, and will also be attempting the Gym Challenge alongside you. I told her to wait outside so that you can get acquainted. A bit of friendly rivalry to keep you two motivated eh? Hehe. Good luck!")
}

movement RedMove1{
    face_down
    walk_down * 2
}

movement RedMove2{
    face_right
    walk_right
    face_down
    walk_down * 2
}

movement RedMove3{
    face_right
    walk_right * 2
    face_down
    walk_down * 2

}

script Woodholme_Lab_EventScript_GiveSecondMon{
    lock
    msgbox(format("In order to be safe, you'll need another Pokémon to accompany your new friend. Here, take this one."))
    playfanfare(MUS_OBTAIN_ITEM)
    message("{PLAYER} received a Lechonk!")
    waitfanfare
    givemon(SPECIES_LECHONK, 5)
    closemessage
    msgbox(format("Feel free to replace your Pokémon with new ones that you catch."))
    waitmessage
    release
    return
}

// Our script for giving Pokédex
script Woodholme_Lab_EventScript_GivePokedex{
    lock
    msgbox(format("Secondly, I use this thing called the PokéDex for my research. Please take this PokéDex and help me further my research."))
    playfanfare(MUS_OBTAIN_ITEM)
    message("{PLAYER} received the POKéDEX!")
    waitfanfare
    closemessage
    setflag(FLAG_SYS_POKEMON_GET)
    setflag(FLAG_SYS_POKEDEX_GET)
    // setflag(FLAG_SYS_NATIONAL_DEX)
    setflag(FLAG_ADVENTURE_STARTED)
    special(SetUnlockedPokedexFlags)
    // special(EnableNationalPokedex)
    setflag(FLAG_RECEIVED_POKEDEX_FROM_BIRCH)
    setvar(VAR_CABLE_CLUB_TUTORIAL_STATE, 1)
    setvar(VAR_WOODHOLME_STATE, 1)
    msgbox(format("The PokéDex automatically records data on Pokémon you've seen. In order to fill your PokéDex you need to catch wild Pokémon using PokéBalls that can be purchased from the PokéMart."))
    waitmessage
    release 
    return
}

// Script to have RED give us an Exp Share
script Woodholme_Lab_EventScript_GiveExpShare{
    lock
    msgbox(format("I also want you to have this Exp. Share which lets you train your whole party at once. Exp. Share can be toggled on or off in your Key Items pocket of your bag."))
    playfanfare(MUS_OBTAIN_ITEM)
    giveitem(ITEM_EXP_SHARE, 1)
    waitfanfare
    closemessage
    release
    return
}

script Woodholme_Lab_Trigger_RedIntro1{
    lock
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerMoveToStarter1)
    waitmovement(0)
    applymovement(Red, Woodholme_Lab_Movement_RedFaceRight)
    waitmovement(0)
    applymovement(May, Woodholme_Lab_Movement_MayLeave)
    waitmovement(0)
    removeobject(May)
    setflag(FLAG_RIVAL_DISAPPEAR)
    msgbox(Woodholm_Lab_Text_Red_Intro, MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
        // If we click "Yes" on his dialogue option.
            msgbox(Woodholme_Lab_Text_RedDialogueYes)
        }
        // IF we click "No" on his dialogue option.
        else{
            msgbox(Woodholme_Lab_Text_RedDialogueNo)
        }
    waitmessage
    release
}

script Woodholme_Lab_Trigger_RedIntro2{
    lock
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerMoveToStarter2)
    waitmovement(0)
    applymovement(Red, Woodholme_Lab_Movement_RedFaceRight)
    waitmovement(0)
    applymovement(May, Woodholme_Lab_Movement_MayLeave)
    waitmovement(0)
    removeobject(May)
    setflag(FLAG_RIVAL_DISAPPEAR)
    msgbox(Woodholm_Lab_Text_Red_Intro, MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
        // If we click "Yes" on his dialogue option.
            msgbox(Woodholme_Lab_Text_RedDialogueYes)
        }
        // IF we click "No" on his dialogue option.
        else{
            msgbox(Woodholme_Lab_Text_RedDialogueNo)
        }
    waitmessage
    release
}

script Woodholme_Lab_Trigger_RedIntro3{
    lock
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerMoveToStarter3)
    waitmovement(0)
    applymovement(Red, Woodholme_Lab_Movement_RedFaceRight)
    waitmovement(0)
    applymovement(May, Woodholme_Lab_Movement_MayLeave)
    waitmovement(0)
    removeobject(May)
    setflag(FLAG_RIVAL_DISAPPEAR)
    msgbox(Woodholm_Lab_Text_Red_Intro, MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
        // If we click "Yes" on his dialogue option.
            msgbox(Woodholme_Lab_Text_RedDialogueYes)
        }
        // IF we click "No" on his dialogue option.
        else{
            msgbox(Woodholme_Lab_Text_RedDialogueNo)
        }
    waitmessage
    release
}

script Woodholme_Lab_Trigger_RedIntro4{
    lock
    applymovement(OBJ_EVENT_ID_PLAYER, Woodholme_Lab_Movement_PlayerMoveToStarter4)
    waitmovement(0)
    applymovement(Red, Woodholme_Lab_Movement_RedFaceRight)
    waitmovement(0)
    applymovement(May, Woodholme_Lab_Movement_MayLeave)
    waitmovement(0)
    removeobject(May)
    setflag(FLAG_RIVAL_DISAPPEAR)
    msgbox(Woodholm_Lab_Text_Red_Intro, MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
        // If we click "Yes" on his dialogue option.
            msgbox(Woodholme_Lab_Text_RedDialogueYes)
        }
        // IF we click "No" on his dialogue option.
        else{
            msgbox(Woodholme_Lab_Text_RedDialogueNo)
        }
    waitmessage
    release
}

movement Woodholme_Lab_Movement_MayLeave{
    face_down
    walk_down * 5
    face_right
    walk_right
    face_down
    walk_down
}

movement Woodholme_Lab_Movement_RedFaceRight{
    face_right
}

movement Woodholme_Lab_Movement_PlayerMoveToStarter1{
    face_up
    walk_up * 3
    face_right
    walk_right
    face_up
    walk_up * 4
    face_left
    step_end
}

movement Woodholme_Lab_Movement_PlayerMoveToStarter2{
    walk_up * 6
    face_left
    step_end
}

movement Woodholme_Lab_Movement_PlayerMoveToStarter3{
    walk_up * 6
    face_left
    walk_left
    step_end
}

movement Woodholme_Lab_Movement_PlayerMoveToStarter4{
    walk_up * 3
    face_left
    walk_left * 2
    face_up
    walk_up * 4
    face_left
    step_end
}

text Woodholm_Lab_Text_Red_Intro{
    format("RED: Ah! You must be the new trainer that just moved in! {PLAYER} is it? Welcome! My name is Red. I used to be the very best trainer in the world. Nowadays, I've set my sights on a completely different challenge... To help new trainers get started on their own Pokémon journey! {PLAYER}, I want you to choose your very own Pokémon friend to take with you on your adventure! Inside those Pokéballs on the table I have three different Pokémon. You may have one of them. Are you ready to choose a Pokémon for yourself?")
}

text Woodholme_Lab_Text_RedDialogueYes{
    format("Excellent. Go over to the table and take the Pokémon you wish to accompany you on your journey.")
}

text Woodholme_Lab_Text_RedDialogueNo{
    format("You won't be able to start your Pokémon adventure without a Pokémon! Please, choose one of the Pokémon.")
}


// Script that triggers on the Pokéball to the left.
script Woodholme_Lab_EventScript_PokeballLeft{
    lock
    // If we haven't claimed any Pokémon from the table:
    if(!(flag(FLAG_STARTER_SQUIRTLE) || flag(FLAG_STARTER_CHARMANDER) || flag(FLAG_STARTER_BULBASAUR))){
    showmonpic(SPECIES_PIPLUP, 10,3)
    msgbox("Do you want to choose Piplup?", MSGBOX_YESNO)
    if(var(VAR_RESULT) == YES){
        givemon(SPECIES_PIPLUP, 5)
        if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Piplup!"))
            removeobject(PokeballLeft)
            setflag(FLAG_STARTER_SQUIRTLE)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 0)
            call(NicknamePartyMon)
        }
        elif(var(VAR_RESULT) == MON_GIVEN_TO_PC){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Piplup!"))
            removeobject(PokeballLeft)
            setflag(FLAG_STARTER_SQUIRTLE)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 0)
            call(NicknameBoxMon)
        }
        else{
            hidemonpic
            msgbox(format("You don't have room for that."))
        }
    }
    else{
        hidemonpic
        msgbox(Woodholme_Lab_Text_NotChosen)
    }

    }
        else{
        msgbox(format("RED: You already have a Pokémon. One is enough."))
     }
    waitmessage
    release
    end

}

// Script that triggers on the Pokéball in the middle.
script Woodholme_Lab_EventScript_PokeballCenter{
    lock
    // If we haven't claimed any Pokémon from the table:
    if(!(flag(FLAG_STARTER_SQUIRTLE) || flag(FLAG_STARTER_CHARMANDER) || flag(FLAG_STARTER_BULBASAUR))){
    showmonpic(SPECIES_LITTEN, 10,3)
    msgbox("Do you want to choose Litten?", MSGBOX_YESNO)
    if(var(VAR_RESULT) == YES){
        givemon(SPECIES_LITTEN, 5)
        if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Litten!"))
            removeobject(PokeballCenter)
            setflag(FLAG_STARTER_CHARMANDER)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 1)
            call(NicknamePartyMon)
        }
        elif(var(VAR_RESULT) == MON_GIVEN_TO_PC){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Litten!"))
            removeobject(PokeballCenter)
            setflag(FLAG_STARTER_CHARMANDER)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 1)
            call(NicknameBoxMon)
        }
        else{
            hidemonpic
            msgbox(format("You don't have room for that."))
        }
    }
    else{
        hidemonpic
        msgbox(Woodholme_Lab_Text_NotChosen)
    }
}
else{
    msgbox(format("RED: You already have a Pokémon. One is enough."))
    }
    waitmessage
    release
    end
}

// Script that triggers on the Pokéball to the right
script Woodholme_Lab_EventScript_PokeballRight{
    lock
    // If we haven't claimed any Pokémon from the table:
    if(!(flag(FLAG_STARTER_SQUIRTLE) || flag(FLAG_STARTER_CHARMANDER) || flag(FLAG_STARTER_BULBASAUR))){
    showmonpic(SPECIES_GROOKEY, 10,3)
    msgbox("Do you want to choose Grookey?", MSGBOX_YESNO)
    if(var(VAR_RESULT) == YES){
        givemon(SPECIES_GROOKEY, 5)
        if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Grookey!"))
            removeobject(PokeballRight)
            setflag(FLAG_STARTER_BULBASAUR)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 2)
            call(NicknamePartyMon)
        }
        elif(var(VAR_RESULT) == MON_GIVEN_TO_PC){
            playfanfare(MUS_OBTAIN_ITEM)
            msgbox(format("{PLAYER} received the Grookey!"))
            removeobject(PokeballRight)
            setflag(FLAG_STARTER_BULBASAUR)
            setvar(VAR_WOODHOLME_LAB_STATE, 1)
            setvar(VAR_STARTER_MON, 2)
            call(NicknameBoxMon)
        }
        else{
            hidemonpic
            msgbox(format("You don't have room for that."))
        }
    }
    else{
        hidemonpic
        msgbox(Woodholme_Lab_Text_NotChosen)
    }
}
else{
    msgbox(format("RED: You already have a Pokémon. One is enough."))

}
    waitmessage
    release
    end
}

// Asking if we want to give our new Pokémon a nickname.
script NicknamePartyMon{
    msgbox("Do you want to give it a nickname?", MSGBOX_YESNO)
    hidemonpic
    if(var(VAR_RESULT) == YES){
        call(Common_EventScript_GetGiftMonPartySlot)
        call(Common_EventScript_NameReceivedPartyMon)
    }
}

// Asking if we want to give it a nickname when sending it to a Box.
script NicknameBoxMon{
    msgbox("Do you want to give it a nickname?", MSGBOX_YESNO)
    hidemonpic
    if(var(VAR_RESULT) == YES){
        call(Common_EventScript_NameReceivedBoxMon)
    }
    msgbox(format("The Pokémon was transferred to the PC."))
}

// Text to display if we click "NO" on the starter choice.
text Woodholme_Lab_Text_NotChosen{
    format("RED: It's a tough choice. Think hard before making your decision!")
}